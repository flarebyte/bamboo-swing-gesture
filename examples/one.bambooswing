id-urn: company7/project12/1235775
license,en: Creative Commons
license-url,json,en: http://website.com/license
attribution-name,en-gb: Firstname LastName
attribution-url,html,en: http://website.com/creator
title,en: My title
description,en: Single line description
metadata-url,rdf,en: http://website.com/meta
homepage-url,markdown,en: https://github.com/owner/project#readme
--- Inputs ---

params: Params
    g:1 := Single; Fraction: enum (1/2, 1/3, 1/5, 1/8)
    g:2 := List: (1 to 10); Fraction: range (0 to 1); fraction: range (0 to 1)
    g:3 := Single; Bool;

--- Points ---
nodeTypes: nodeTypes
nodeTypes =
    nt:g/1 := Major
    nt:g/2 := Minor
    nt:g/3 := Intermediary


edgeTypes: EdgeTypes
edgeTypes =
    et:h/1 := Flow
    et:h/1/b := BezierFirst
    et:h/2 := Flow
    et:h/3 := BiDirFlow

points: Nodes
points = 
    p:a/b/2 := nt:g/1; Translate(p:0, 1/3, 2/7)
    p:a/b/3 := nt:g/2; Translate(p:0, 1/4, 3/7)
    p:a/b/4 := ;Translate(p:a/b/3, 1/5, 6/7)
    p:a/b/5 := nt:g/2; Translate(p:a/b/4, 1/5, 6/7)
    p:a/b/6 := ; Line(p:a/b/4, p:a/b/5) Line(p:a/b/6, p:a/b/2) |> Inter
    p:a/b/7 := ; Line(p:a/b/4, p:a/b/5) Circle(p:a/b/6, 3/4) |> Inter
    p:a/b/7 := ; Circle(p:a/b/4, 4/5) Circle(p:a/b/6, 3/4) |> Inter
    p:a/b/8 := ; Bezier(p:a/b/1, p:a/b/2, p:a/b/2) Circle(p:a/b/6, 3/4) |> Inter
    p:a/b/9 := ; Bezier(p:a/b/1, p:a/b/2, p:a/b/3, p:a/b/4) Circle(p:a/b/6, 3/4) |> Inter
    
edges: Edges
edges =
    p:a/b/3 -> p:a/b/4 := et:h/1
    p:a/b/3 -> p:a/b/6 := et:h/2
    p:a/b/3 -> p:a/b/5 := et:h/1/b, et:h/2 if g:3


